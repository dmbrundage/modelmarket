[{"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\index.js":"1","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\App.js":"2","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\reportWebVitals.js":"3","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\NavContent.js":"4","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Header.js":"5","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\ContentCards.js":"6","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Login.js":"7","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\pages\\LoginPage.js":"8","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\pages\\Homepage.js":"9","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\pages\\Submitpage.js":"10","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Submit.js":"11"},{"size":649,"mtime":1612230446261,"results":"12","hashOfConfig":"13"},{"size":673,"mtime":1612277678705,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":3390,"mtime":1612230362604,"results":"16","hashOfConfig":"13"},{"size":2612,"mtime":1612277372420,"results":"17","hashOfConfig":"13"},{"size":5252,"mtime":1612230355365,"results":"18","hashOfConfig":"13"},{"size":3331,"mtime":1612275886224,"results":"19","hashOfConfig":"13"},{"size":244,"mtime":1612277693854,"results":"20","hashOfConfig":"13"},{"size":417,"mtime":1612277695317,"results":"21","hashOfConfig":"13"},{"size":247,"mtime":1612277873489,"results":"22","hashOfConfig":"13"},{"size":198,"mtime":1612277789650,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sni01s",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\index.js",[],["49","50"],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\App.js",["51"],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\reportWebVitals.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\NavContent.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Header.js",["52","53","54"],"import { AppBar, Toolbar, Typography, makeStyles, Button, Link } from \"@material-ui/core\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport React from \"react\";\r\nimport { Link as RouterL , Redirect} from \"react-router-dom\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"#9342f5\",\r\n    paddingRight: \"79px\",\r\n    paddingLeft: \"25px\",\r\n  },  \r\n  drawer: {\r\n    width: 240,\r\n    flexShrink: 0,\r\n  },\r\n  logo: {\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 800,\r\n    color: \"#FFFEFE\",\r\n    textAlign: \"left\",\r\n  },\r\n  menuButton: {\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    fontWeight: 700,\r\n    size: \"18px\",\r\n    marginLeft: \"38px\",\r\n },\r\n toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst headersData = [\r\n    {\r\n      label: \"Submit\",\r\n      href: \"/Submit\",\r\n    },\r\n    {\r\n      label: \"Models\",\r\n      href: \"/Models\",\r\n    },\r\n    {\r\n      label: \"My Profile\",\r\n      href: \"/Profile\",\r\n    },\r\n    {\r\n      label: \"Log In\",\r\n      href: \"/Login\",\r\n    },\r\n  ];\r\n\r\nexport default function Header() {\r\n  \r\n  const RouteChange=(linkPath)=> {\r\n    let history = useHistory();\r\n    history.push(linkPath);\r\n  }\r\n  const { header, logo, menuButton, toolbar } = useStyles();\r\n\r\n  const displayDesktop = () => {\r\n    return (<Toolbar className={toolbar}>\r\n        {aiMenagerieLogo}\r\n        <div>{searchBar}</div>\r\n        <div>{getMenuButtons()}</div>\r\n    </Toolbar>\r\n    );\r\n  };\r\n\r\n//TODO Make searchbar actually search?\r\n  const searchBar = (\r\n       <SearchBar  onChange={() => console.log('onChange')}\r\n       onRequestSearch={() => console.log('onRequestSearch')}\r\n    \r\n   />)\r\n  const aiMenagerieLogo = (\r\n    <React.Fragment>\r\n    <Typography variant=\"h6\" component=\"h1\" className={logo}\r\n    ><Link href=\"/\" onClick={RouteChange(Link.href)} color= \"inherit\">\r\n\r\n      Menagerie\r\n      </Link>\r\n    </Typography></React.Fragment>\r\n  );\r\n  const getMenuButtons = () => {\r\n    return headersData.map(({ label, href }) => {\r\n      return (\r\n\r\n        <Button key = {label}\r\n            color= \"inherit\"\r\n            //to={href}\r\n            //component= {RouterL}\r\n            className={menuButton}\r\n        \r\n        ><Link href={href} onClick={RouteChange(Link.href)} color=\"inherit\">\r\n          {label}\r\n          </Link>\r\n        </Button>\r\n        \r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <header>\r\n      <AppBar position=\"fixed\" className={header}>{displayDesktop()}</AppBar>\r\n    </header>\r\n  );\r\n}\r\n","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\ContentCards.js",["55","56","57"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(10),\r\n      paddingBottom: theme.spacing(8)\r\n    },\r\n    card: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\"\r\n    },\r\n    cardMedia: {\r\n      paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1\r\n    },  \r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  \r\n    }));\r\n\r\n      //hardcoded cards to populate content paper\r\n      const cards = [\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/wsi.jfif\",\r\n          desc: \"Whole Slide Image\",\r\n          title: \"HoVer-Net Nuclei Segmentation\",\r\n          tag: ['Computer Vision', 'PyTorch']\r\n        },\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/ner.png\",\r\n          desc: \"Clinical Pathology Notes\",\r\n          title: \"Named Entity Recognition\"\r\n        },\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/k-means2.jpg\",\r\n          desc: \"Unsupervised Example\",\r\n          title: \"KMeans Clustering\"\r\n        },\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/classifier.png\",\r\n          desc: \"Binary Classifier\",\r\n          title: \"Generic Machine Learning Classification\"\r\n        }\r\n      ];\r\n\r\nexport default function ContentContainer() {\r\n    const classes = useStyles();\r\n    //function to expand cards\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [fav, setFav] = React.useState(true);\r\n  \r\n    const handleExpandClick = i => {\r\n      setExpanded(expanded === i ? -1 : i);\r\n    };\r\n    const handleFavoriteClick = i => {\r\n      console.log(i)\r\n      setFav(fav === i ? -1 : i);\r\n    };\r\nreturn(\r\n    //<React.Fragment>\r\n    //<CssBaseline />\r\n <Container  className={classes.cardGrid} maxWidth=\"lg\">\r\n {/* creating container grid for cards */}\r\n\r\n <Grid container spacing={2}\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\">\r\n   {cards.map((card, index) => (\r\n     <Grid item key md={4}>\r\n       <Card className={classes.card}>\r\n         <CardMedia\r\n           className={classes.cardMedia}\r\n           image={card.img}\r\n           title=\"Image title\"\r\n         />\r\n         <CardContent className={classes.cardContent}>\r\n           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n           {card.title}\r\n           </Typography>\r\n           <Typography>{card.desc}</Typography>\r\n         </CardContent>\r\n         <CardActions>\r\n           <IconButton aria-label=\"GitHub\">\r\n               <GitHubIcon />\r\n           </IconButton>\r\n           <IconButton aria-label=\"Share\">\r\n               <ShareIcon />\r\n           </IconButton>\r\n           <IconButton aria-label=\"Download\">\r\n               <GetAppIcon />\r\n           </IconButton>\r\n           <IconButton className={clsx(classes.favoriteIcon)}\r\n                       onClick={() => handleFavoriteClick(index)} \r\n                       aria-label=\"Favorite\"\r\n                       color={fav ? \"primary\" : \"secondary\"}>\r\n               <FavoriteIcon />\r\n           </IconButton>\r\n           <IconButton\r\n           className={clsx(classes.expand)}\r\n                       onClick={() => handleExpandClick(index)}\r\n                       aria-expanded={expanded}\r\n                       aria-label=\"show more\"\r\n>\r\n <ExpandMoreIcon />\r\n</IconButton>\r\n         </CardActions>\r\n         <Collapse in={expanded === index}  timeout=\"auto\" unmountOnExit>\r\n<CardContent>\r\n <Typography paragraph>Method:</Typography>\r\n <Typography paragraph>Performance Metrics:</Typography>\r\n <Typography paragraph>Notes:</Typography>\r\n</CardContent>\r\n</Collapse>\r\n       </Card>\r\n     </Grid>\r\n   ))}\r\n </Grid>\r\n</Container>\r\n//</React.Fragment>\r\n)}","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Login.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\pages\\LoginPage.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\pages\\Homepage.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\pages\\Submitpage.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Submit.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"66","line":4,"column":18,"nodeType":"64","messageId":"65","endLine":4,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":4,"column":28,"nodeType":"64","messageId":"65","endLine":4,"endColumn":36},{"ruleId":"62","severity":1,"message":"68","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":16},{"ruleId":"62","severity":1,"message":"69","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":14},{"ruleId":"62","severity":1,"message":"70","line":11,"column":8,"nodeType":"64","messageId":"65","endLine":11,"endColumn":12},{"ruleId":"62","severity":1,"message":"71","line":20,"column":8,"nodeType":"64","messageId":"65","endLine":20,"endColumn":15},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'RouterL' is defined but never used.","'Redirect' is defined but never used.","'HomeIcon' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Toolbar' is defined but never used.","no-global-assign","no-unsafe-negation"]