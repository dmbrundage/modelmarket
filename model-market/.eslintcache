[{"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\index.js":"1","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\App.js":"2","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\reportWebVitals.js":"3","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\NavContent.js":"4","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Header.js":"5","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\ContentCards.js":"6","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Login.js":"7","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Homepage.js":"8"},{"size":649,"mtime":1612230446261,"results":"9","hashOfConfig":"10"},{"size":562,"mtime":1612236873455,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3390,"mtime":1612230362604,"results":"13","hashOfConfig":"10"},{"size":2510,"mtime":1612240020693,"results":"14","hashOfConfig":"10"},{"size":5252,"mtime":1612230355365,"results":"15","hashOfConfig":"10"},{"size":3331,"mtime":1612238804992,"results":"16","hashOfConfig":"10"},{"size":460,"mtime":1612231180832,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1sni01s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\index.js",[],["36","37"],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\App.js",["38"],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\reportWebVitals.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\NavContent.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Header.js",["39"],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\ContentCards.js",["40","41","42"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(10),\r\n      paddingBottom: theme.spacing(8)\r\n    },\r\n    card: {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\"\r\n    },\r\n    cardMedia: {\r\n      paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1\r\n    },  \r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  \r\n    }));\r\n\r\n      //hardcoded cards to populate content paper\r\n      const cards = [\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/wsi.jfif\",\r\n          desc: \"Whole Slide Image\",\r\n          title: \"HoVer-Net Nuclei Segmentation\",\r\n          tag: ['Computer Vision', 'PyTorch']\r\n        },\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/ner.png\",\r\n          desc: \"Clinical Pathology Notes\",\r\n          title: \"Named Entity Recognition\"\r\n        },\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/k-means2.jpg\",\r\n          desc: \"Unsupervised Example\",\r\n          title: \"KMeans Clustering\"\r\n        },\r\n        {\r\n          img:\r\n            \"https://storage.googleapis.com/site-assets-aim/classifier.png\",\r\n          desc: \"Binary Classifier\",\r\n          title: \"Generic Machine Learning Classification\"\r\n        }\r\n      ];\r\n\r\nexport default function ContentContainer() {\r\n    const classes = useStyles();\r\n    //function to expand cards\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [fav, setFav] = React.useState(true);\r\n  \r\n    const handleExpandClick = i => {\r\n      setExpanded(expanded === i ? -1 : i);\r\n    };\r\n    const handleFavoriteClick = i => {\r\n      console.log(i)\r\n      setFav(fav === i ? -1 : i);\r\n    };\r\nreturn(\r\n    //<React.Fragment>\r\n    //<CssBaseline />\r\n <Container  className={classes.cardGrid} maxWidth=\"lg\">\r\n {/* creating container grid for cards */}\r\n\r\n <Grid container spacing={2}\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\">\r\n   {cards.map((card, index) => (\r\n     <Grid item key md={4}>\r\n       <Card className={classes.card}>\r\n         <CardMedia\r\n           className={classes.cardMedia}\r\n           image={card.img}\r\n           title=\"Image title\"\r\n         />\r\n         <CardContent className={classes.cardContent}>\r\n           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n           {card.title}\r\n           </Typography>\r\n           <Typography>{card.desc}</Typography>\r\n         </CardContent>\r\n         <CardActions>\r\n           <IconButton aria-label=\"GitHub\">\r\n               <GitHubIcon />\r\n           </IconButton>\r\n           <IconButton aria-label=\"Share\">\r\n               <ShareIcon />\r\n           </IconButton>\r\n           <IconButton aria-label=\"Download\">\r\n               <GetAppIcon />\r\n           </IconButton>\r\n           <IconButton className={clsx(classes.favoriteIcon)}\r\n                       onClick={() => handleFavoriteClick(index)} \r\n                       aria-label=\"Favorite\"\r\n                       color={fav ? \"primary\" : \"secondary\"}>\r\n               <FavoriteIcon />\r\n           </IconButton>\r\n           <IconButton\r\n           className={clsx(classes.expand)}\r\n                       onClick={() => handleExpandClick(index)}\r\n                       aria-expanded={expanded}\r\n                       aria-label=\"show more\"\r\n>\r\n <ExpandMoreIcon />\r\n</IconButton>\r\n         </CardActions>\r\n         <Collapse in={expanded === index}  timeout=\"auto\" unmountOnExit>\r\n<CardContent>\r\n <Typography paragraph>Method:</Typography>\r\n <Typography paragraph>Performance Metrics:</Typography>\r\n <Typography paragraph>Notes:</Typography>\r\n</CardContent>\r\n</Collapse>\r\n       </Card>\r\n     </Grid>\r\n   ))}\r\n </Grid>\r\n</Container>\r\n//</React.Fragment>\r\n)}","C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Login.js",[],"C:\\Users\\DavidDev\\Desktop\\modelmarket\\model-market\\src\\Components\\Homepage.js",["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":16},{"ruleId":"49","severity":1,"message":"54","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"55","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":12},{"ruleId":"49","severity":1,"message":"56","line":20,"column":8,"nodeType":"51","messageId":"52","endLine":20,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"57","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":16},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'HomeIcon' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Toolbar' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]